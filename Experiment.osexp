---
API: 2
OpenSesame: 3.1.4
Platform: nt
---
set width 1024
set uniform_coordinates yes
set title "Extended template"
set subject_parity even
set subject_nr 0
set start experiment
set sound_sample_size -16
set sound_freq 48000
set sound_channels 2
set sound_buf_size 1024
set sampler_backend legacy
set round_decimals 2
set mouse_backend xpyriment
set keyboard_backend legacy
set height 768
set fullscreen no
set form_clicks no
set foreground white
set font_underline no
set font_size 18
set font_italic no
set font_family mono
set font_bold no
set experiment_path "D:\\usermodels2\\usermodels"
set disable_garbage_collection yes
set description "A template containing a practice and an experimental phase"
set coordinates uniform
set compensation 0
set color_backend legacy
set clock_backend legacy
set canvas_backend xpyriment
set bidi yes
set background black

define loop arithmetic
	set source_file ""
	set source table
	set skip 0
	set repeat 1
	set order random
	set offset no
	set item trial_sequence
	set description "A single block of trials"
	set cycles 15
	set continuous no
	set column_order ""
	set break_if_on_first yes
	set break_if never
	setcycle 0 difficulty easy
	setcycle 0 question_no "2 + 4"
	setcycle 1 difficulty medium
	setcycle 1 question_no "3x = 15"
	setcycle 2 difficulty hard
	setcycle 2 question_no "4x - 2 = 10"
	setcycle 3 difficulty easy
	setcycle 3 question_no "3 + 7"
	setcycle 4 difficulty medium
	setcycle 4 question_no "2x = 6"
	setcycle 5 difficulty hard
	setcycle 5 question_no "3x - 3 = 6"
	setcycle 6 difficulty easy
	setcycle 6 question_no "4 + 3"
	setcycle 7 difficulty medium
	setcycle 7 question_no "6x = 12"
	setcycle 8 difficulty hard
	setcycle 8 question_no "3x - 5 = 10"
	setcycle 9 difficulty easy
	setcycle 9 question_no "6 + 2"
	setcycle 10 difficulty medium
	setcycle 10 question_no "4x = 16"
	setcycle 11 difficulty hard
	setcycle 11 question_no "3x - 8 = 7"
	setcycle 12 difficulty easy
	setcycle 12 question_no "1 + 8"
	setcycle 13 difficulty medium
	setcycle 13 question_no "7x = 28"
	setcycle 14 difficulty hard
	setcycle 14 question_no "7x - 3 = 18"
	run trial_sequence

define sketchpad arithmetic_task
	set duration 1
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=40 html=yes show_if=always text="[question_no]" x=0 y=0 z_index=0

define sketchpad blank_screen_1
	set duration 1
	set description "Displays stimuli"

define sequence blocksequence
	set flush_keyboard yes
	set description "A sequence containing a single block of trials followed by feedback to the participant"
	run reset_feedback always
	run practice_instructions always
	run arithmetic always
	run instructions2 always
	run reversal always

define inline_script calc_slope
	set description "Executes Python code"
	___run__
	var.result = stats.linregress(list(range(1,len(var.pupilsizes)+1)), var.pupilsizes)
	var.slope = var.result.slope
	
	
	
	# for testing (first trial is always NA somehow)
	#var.avg = sum(var.pupilsizes) / len(var.pupilsizes)
	__end__
	___prepare__
	import numpy as np
	from scipy import stats
	__end__

define inline_script calc_slope_1
	set description "Executes Python code"
	___run__
	var.result = stats.linregress(list(range(1,len(var.pupilsizes)+1)), var.pupilsizes)
	var.slope = var.result.slope
	
	
	
	# for testing (first trial is always NA somehow)
	#var.avg = sum(var.pupilsizes) / len(var.pupilsizes)
	__end__
	___prepare__
	import numpy as np
	from scipy import stats
	__end__

define inline_script collect_pupil_trace
	set description "Executes Python code"
	___run__
	if 'dummy' in exp.items['pygaze_init'].tracker_type:
		pylink = None
	else:
		import pylink
	import numpy as np
	
	def collectPupilTrace(dur, fd=10):
		
		"""
		desc:
			Returns an array of recorded pupil-size values.
			
		arguments:
			itemArray:		An ItemArray object.
			dur:			The recording duration.
			fd:				The frame duration in milliseconds.
			
		returns:
			A numpy array that with a dur/fd length.
		"""
		
		t0 = self.time()
		a = np.zeros(dur/fd)
		_dt = 0
		#df = open(('F:\Documents\HMC\User Models\pupildata.txt'),'a')
		while _dt < dur:		
			if pylink != None:
				ps = eyetracker.pupil_size()
			else:
				# Use Y coordinate of mouse
				#ps = my_mouse.get_pos()[0][1]+var.height/2
				ps = 2
			
			dt = self.time()-t0
	
			a[int(_dt/fd):int(dt/fd)] = ps
			_dt = dt
			#df.write(str(ps))
		#df.close()		
		return a
	__end__
	set _prepare ""

define sketchpad end_of_experiment
	set start_response_interval no
	set duration keypress
	set description "A sketchpad notifying the participant that the experiment is finished"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="Press any key to exit" x=0 y=0 z_index=0

define sketchpad end_of_practice
	set start_response_interval no
	set duration keypress
	set description "A sketchpad notifying the participant that the practice phase is finished"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="Press any key to continue" x=0 y=0 z_index=0

define sequence experiment
	set flush_keyboard yes
	set description "The main sequence of the experiment"
	run instructions always
	run pygaze_init always
	run collect_pupil_trace always
	run training always
	run end_of_practice always
	run end_of_experiment always

define sketchpad fixation_cross
	set duration 1500
	set description "Displays stimuli"
	draw fixdot color=white show_if=always style=default x=0 y=0 z_index=0

define sketchpad fixation_cross_1
	set duration 1500
	set description "Displays stimuli"
	draw fixdot color=white show_if=always style=default x=0 y=0 z_index=0

define inline_script getdata
	set description "Executes Python code"
	___run__
	sleep(1) # in seconds
	var.pupilsizes = collectPupilTrace(4000)
	var.str_pupilsizes = ','.join([str(i) for i in var.pupilsizes])
	__end__
	___prepare__
	from time import sleep
	__end__

define inline_script getdata_1
	set description "Executes Python code"
	___run__
	sleep(.5) # in seconds
	var.pupilsizes = collectPupilTrace(3500)
	var.str_pupilsizes = ','.join([str(i) for i in var.pupilsizes])
	__end__
	set _prepare ""

define sketchpad instructions
	set start_response_interval no
	set duration keypress
	set description "A sketchpad containing the instructions for the participant"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="Press any key to begin!" x=0 y=0 z_index=0

define form_text_display instructions2
	set timeout infinite
	set spacing 10
	set rows "1;4;1"
	set only_render no
	set ok_text "Start next part of the experiment"
	set margins "50;50;50;50"
	set form_title Instructions
	set form_text "Look at and remember the word. When it disappears, reverse the letters in your head. Make sure to start when the word has disappeared."
	set description "A simple text display form"
	set cols "1;1;1"
	set _theme gray
	widget 0 0 3 1 label text="[form_title]"
	widget 0 1 3 1 label center=no text="[form_text]"
	widget 1 2 1 1 button text="[ok_text]"


define sketchpad letter_task_1
	set duration 500
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=40 html=yes show_if=always text="[question_no]" x=0 y=0 z_index=0

define inline_script new_inline_script
	set description "Executes Python code"
	set _run ""
	set _prepare ""

define logger new_logger
	set description "Logs experimental data"
	set auto_log yes

define logger new_logger_1
	set description "Logs experimental data"
	set auto_log yes

define pygaze_drift_correct new_pygaze_drift_correct
	set ypos 0
	set xpos 0
	set target_style default
	set target_color "[foreground]"
	set fixation_triggered yes
	set draw_target yes
	set description "Perform eye-tracker drift correction"

define pygaze_drift_correct new_pygaze_drift_correct_1
	set ypos 0
	set xpos 0
	set target_style default
	set target_color "[foreground]"
	set fixation_triggered no
	set draw_target yes
	set description "Perform eye-tracker drift correction"

define pygaze_log new_pygaze_log
	set throttle 2
	set msg ""
	set description "Writes information to the eye-tracker logfile"
	set auto_log yes

define pygaze_log new_pygaze_log_2
	set throttle 2
	set msg ""
	set description "Writes information to the eye-tracker logfile"
	set auto_log no

define pygaze_start_recording new_pygaze_start_recording
	set status_msg start_trial
	set description "Puts the eye tracker into recording mode"

define pygaze_start_recording new_pygaze_start_recording_1
	set status_msg start_trial
	set description "Puts the eye tracker into recording mode"

define pygaze_stop_recording new_pygaze_stop_recording
	set status_msg stop_trial
	set description "Stops recording of eye tracking data"

define pygaze_stop_recording new_pygaze_stop_recording_1
	set status_msg stop_trial
	set description "Stops recording of eye tracking data"

define form_text_display practice_instructions
	set timeout infinite
	set spacing 10
	set rows "1;4;1"
	set only_render no
	set ok_text Ok
	set margins "50;50;50;50"
	set form_title Instructions
	__form_text__
	The training phase for arithmetic questions will start now. 
	Mentally calculate the following expressions:
	__end__
	set description "A simple text display form"
	set cols "1;1;1"
	set _theme gray
	widget 0 0 3 1 label text="[form_title]"
	widget 0 1 3 1 label center=no text="[form_text]"
	widget 1 2 1 1 button text="[ok_text]"


define pygaze_init pygaze_init
	set tracker_type "Simple dummy"
	set tobiiglasses_udpport 49152
	set tobiiglasses_address "192.168.71.50"
	set smi_send_port 4444
	set smi_recv_port 5555
	set smi_ip "127.0.0.1"
	set sacc_vel_thr 35
	set sacc_acc_thr 9500
	set eyelink_pupil_size_mode area
	set eyelink_force_drift_correct yes
	set description "Initialize and calibrate eye tracker"
	set calibrate yes
	set calbeep yes
	set _logfile automatic

define reset_feedback reset_feedback
	set description "Resets the feedback variables, such as 'avg_rt' and 'acc'"

define loop reversal
	set source_file ""
	set source table
	set repeat 1
	set order random
	set description "Repeatedly runs another item"
	set cycles 15
	set continuous no
	set break_if_on_first yes
	set break_if never
	setcycle 0 difficulty easy
	setcycle 0 question_no cat
	setcycle 1 difficulty medium
	setcycle 1 question_no demon
	setcycle 2 difficulty hard
	setcycle 2 question_no exactly
	setcycle 3 difficulty easy
	setcycle 3 question_no dog
	setcycle 4 difficulty medium
	setcycle 4 question_no seven
	setcycle 5 difficulty hard
	setcycle 5 question_no digital
	setcycle 6 difficulty easy
	setcycle 6 question_no pen
	setcycle 7 difficulty medium
	setcycle 7 question_no death
	setcycle 8 difficulty hard
	setcycle 8 question_no meeting
	setcycle 9 difficulty easy
	setcycle 9 question_no cup
	setcycle 10 difficulty medium
	setcycle 10 question_no satan
	setcycle 11 difficulty hard
	setcycle 11 question_no nuclear
	setcycle 12 difficulty easy
	setcycle 12 question_no bed
	setcycle 13 difficulty medium
	setcycle 13 question_no glass
	setcycle 14 difficulty hard
	setcycle 14 question_no lucifer
	run trial_sequence_1

define inline_script test
	set description "Executes Python code"
	___run__
	var.t1 = self.time()
	var.t2 = var.t1 - var.t0
	__end__
	set _prepare ""

define inline_script test1
	set description "Executes Python code"
	set _run "var.t0 = self.time()"
	set _prepare ""

define loop training
	set source_file ""
	set source table
	set skip 0
	set repeat 1
	set order random
	set offset no
	set item block_sequence
	set description "A loop containing one or more practice blocks"
	set cycles 1
	set continuous no
	set column_order practice
	set break_if_on_first yes
	set break_if never
	setcycle 0 practice yes
	run blocksequence

define sequence trial_sequence
	set flush_keyboard yes
	set description "A single trial"
	run new_pygaze_drift_correct always
	run new_pygaze_start_recording always
	run fixation_cross always
	run test1 always
	run arithmetic_task always
	run getdata always
	run test always
	run calc_slope always
	run new_pygaze_log always
	run new_logger always
	run new_pygaze_stop_recording always

define sequence trial_sequence_1
	set flush_keyboard yes
	set description "A single trial"
	run new_pygaze_drift_correct_1 always
	run new_pygaze_start_recording_1 always
	run fixation_cross_1 always
	run letter_task_1 always
	run blank_screen_1 always
	run getdata_1 always
	run calc_slope_1 always
	run new_pygaze_log_2 always
	run new_logger_1 always
	run new_pygaze_stop_recording_1 always

